/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package chatclient;

import java.awt.List;
import java.io.IOException;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author 201312287
 */
public class ChatFrame extends javax.swing.JFrame {
    
    /**
     * Creates new form MainFrame
     */
    
    private static ChatClient client;
    private static ChatFrame cf;
    
    public ChatFrame() {
        initComponents();
        this.setVisible(false);
        chatBox.setEditable(false);
        chatPanel.setVisible(true);
        hostInputPanel.setVisible(false);
        
        LoginDialog.pack();
        LoginDialog.setVisible(true);
        
        //Listeners
        //Shuts down program when Login Frame or Chat Panel is closed
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                System.exit(0);
            }
        });
        LoginDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                System.exit(0);
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hostClientBtnGroup = new javax.swing.ButtonGroup();
        LoginDialog = new javax.swing.JDialog();
        loginPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        loginBtn = new javax.swing.JButton();
        layeredPane = new javax.swing.JLayeredPane();
        hostInputPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        hostPortTF = new javax.swing.JFormattedTextField();
        clientInputPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        clientPortTF = new javax.swing.JFormattedTextField();
        ipTF1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ipTF2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ipTF3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ipTF4 = new javax.swing.JTextField();
        clientRadioBtn = new javax.swing.JRadioButton();
        hostRadioBtn = new javax.swing.JRadioButton();
        chatPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatBox = new javax.swing.JTextArea();
        messageField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        accountMenu = new javax.swing.JMenu();
        signOutMI = new javax.swing.JMenuItem();

        LoginDialog.setTitle("Login");
        LoginDialog.setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Login to Chatter");

        loginBtn.setText("Sign In");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Port");

        hostPortTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        hostPortTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout hostInputPanelLayout = new javax.swing.GroupLayout(hostInputPanel);
        hostInputPanel.setLayout(hostInputPanelLayout);
        hostInputPanelLayout.setHorizontalGroup(
            hostInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(hostPortTF, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        hostInputPanelLayout.setVerticalGroup(
            hostInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hostInputPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hostPortTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61))
        );

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Server Address");

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Port");

        clientPortTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        clientPortTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(".");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText(".");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(".");

        javax.swing.GroupLayout clientInputPanelLayout = new javax.swing.GroupLayout(clientInputPanel);
        clientInputPanel.setLayout(clientInputPanelLayout);
        clientInputPanelLayout.setHorizontalGroup(
            clientInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(clientInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ipTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipTF3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipTF4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(clientPortTF, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        clientInputPanelLayout.setVerticalGroup(
            clientInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, clientInputPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(clientInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(clientInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ipTF1)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(clientInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ipTF2)
                        .addComponent(jLabel4))
                    .addGroup(clientInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ipTF3)
                        .addComponent(jLabel5))
                    .addComponent(ipTF4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientPortTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        layeredPane.setLayer(hostInputPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPane.setLayer(clientInputPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layeredPaneLayout = new javax.swing.GroupLayout(layeredPane);
        layeredPane.setLayout(layeredPaneLayout);
        layeredPaneLayout.setHorizontalGroup(
            layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hostInputPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(clientInputPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layeredPaneLayout.setVerticalGroup(
            layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(hostInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layeredPaneLayout.createSequentialGroup()
                    .addComponent(clientInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        hostClientBtnGroup.add(clientRadioBtn);
        clientRadioBtn.setSelected(true);
        clientRadioBtn.setText("Client");
        clientRadioBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clientRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientRadioBtnActionPerformed(evt);
            }
        });

        hostClientBtnGroup.add(hostRadioBtn);
        hostRadioBtn.setText("Host");
        hostRadioBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hostRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostRadioBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(layeredPane)
            .addComponent(loginBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addComponent(clientRadioBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hostRadioBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientRadioBtn)
                    .addComponent(hostRadioBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(layeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout LoginDialogLayout = new javax.swing.GroupLayout(LoginDialog.getContentPane());
        LoginDialog.getContentPane().setLayout(LoginDialogLayout);
        LoginDialogLayout.setHorizontalGroup(
            LoginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
            .addGroup(LoginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LoginDialogLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        LoginDialogLayout.setVerticalGroup(
            LoginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
            .addGroup(LoginDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(LoginDialogLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 350));

        chatPanel.setName(""); // NOI18N

        chatBox.setColumns(20);
        chatBox.setRows(5);
        jScrollPane1.setViewportView(chatBox);

        jLabel8.setText("Message");

        javax.swing.GroupLayout chatPanelLayout = new javax.swing.GroupLayout(chatPanel);
        chatPanel.setLayout(chatPanelLayout);
        chatPanelLayout.setHorizontalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(chatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .addGroup(chatPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(messageField)))
                .addContainerGap())
        );
        chatPanelLayout.setVerticalGroup(
            chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, chatPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(chatPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addContainerGap())
        );

        accountMenu.setText("File");

        signOutMI.setText("Sign Out");
        signOutMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutMIActionPerformed(evt);
            }
        });
        accountMenu.add(signOutMI);

        menuBar.add(accountMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chatPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        String serverAddress = "";
        int port;
        
        if(clientRadioBtn.isSelected()){
            
            boolean validAddress = true;
            
            //validate input IP
            if(!ipTF1.equals("") &&
                    !ipTF2.equals("") &&
                    !ipTF3.equals("") &&
                    !ipTF4.equals("")){
                
                ArrayList<String> ip = new ArrayList<String>(){{
                    add(ipTF1.getText());
                    add(ipTF2.getText());
                    add(ipTF3.getText());
                    add(ipTF4.getText());
                }};
                
                for(int i = 0; i < ip.size(); i++){
                    String ipPart = ip.get(i);
                    serverAddress += ipPart;
                    if(Integer.parseInt(ipPart) < 0 || Integer.parseInt(ipPart) > 255)
                        validAddress = false;
                    if(i != ip.size() - 1)
                        serverAddress += ".";
                }
                
                System.out.println(serverAddress);
                
            }
            
            if(validAddress &&
                    !clientPortTF.getText().equals("")){
                
                try {
                    if(InetAddress.getByName(serverAddress).isReachable(5000)){
                        
                        port = Integer.parseInt(clientPortTF.getText());
                        
                        this.setTitle(serverAddress);
                        chatPanel.setVisible(true);
                        this.setVisible(true);
                        LoginDialog.dispose();
                        
                        //start network stream
                        client = new ChatClient(serverAddress, port, messageField, chatBox);
                        client.start();
                        
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Cannot find host " + serverAddress, "Address not found", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (UnknownHostException ex) {
                    JOptionPane.showMessageDialog(null, "Something went wrong: " + ex, "Address not found", JOptionPane.ERROR_MESSAGE);
                } catch (IOException ex) {
                    System.out.println("ayyy");
                    JOptionPane.showMessageDialog(null, "Error testing connection to " + serverAddress + ": " + ex, "Address not found", JOptionPane.ERROR_MESSAGE);
                }
                
            }
        }
        else if(hostRadioBtn.isSelected()){
            if(!hostPortTF.getText().equals("")){
                port = Integer.parseInt(hostPortTF.getText());
                serverAddress = "localhost";
                
                //host can use chat too
                client = new ChatClient(serverAddress, port, messageField, chatBox);
                this.setTitle(serverAddress);
                
                chatPanel.setVisible(true);
                LoginDialog.dispose();
                this.setVisible(true);
                
                try {
                    new ChatServer(port, client);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Cannot start server " + serverAddress, "Server Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_loginBtnActionPerformed
    
    private void clientRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientRadioBtnActionPerformed
        hostRadioBtn.setSelected(true);
        
        if(hostRadioBtn.isSelected()){
            hostRadioBtn.setSelected(false);
            clientRadioBtn.setSelected(true);
            
            hostInputPanel.setVisible(false);
            hostPortTF.setText("");
            clientInputPanel.setVisible(true);
        }
    }//GEN-LAST:event_clientRadioBtnActionPerformed
    
    private void hostRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostRadioBtnActionPerformed
        clientRadioBtn.setSelected(true);
        
        if(clientRadioBtn.isSelected()){
            clientRadioBtn.setSelected(false);
            hostRadioBtn.setSelected(true);
            
            clientInputPanel.setVisible(false);
            ipTF1.setText("");
            ipTF2.setText("");
            ipTF3.setText("");
            ipTF4.setText("");
            clientPortTF.setText("");
            
            hostInputPanel.setVisible(true);
        }
    }//GEN-LAST:event_hostRadioBtnActionPerformed
    
    private void signOutMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutMIActionPerformed
        System.exit(0);
    }//GEN-LAST:event_signOutMIActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                cf = new ChatFrame();
            }
        });
        
        (new Thread(){
            String titleName = "";
            @Override
            public void run(){
                while(true){
                    if(client != null){
                        if((client.getUserName() != null) && !client.getUserName().equals(titleName)){
                            titleName = client.getUserName();
                            cf.setTitle(cf.getTitle() + " - " + titleName);
                        }
                        else {
                            try {
                                Thread.sleep(5000);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(ChatFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    } else{
                        try {
                            Thread.sleep(5000);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(ChatFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }).start();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog LoginDialog;
    private javax.swing.JMenu accountMenu;
    private javax.swing.JTextArea chatBox;
    private javax.swing.JPanel chatPanel;
    private javax.swing.JPanel clientInputPanel;
    private javax.swing.JFormattedTextField clientPortTF;
    private javax.swing.JRadioButton clientRadioBtn;
    private javax.swing.ButtonGroup hostClientBtnGroup;
    private javax.swing.JPanel hostInputPanel;
    private javax.swing.JFormattedTextField hostPortTF;
    private javax.swing.JRadioButton hostRadioBtn;
    private javax.swing.JTextField ipTF1;
    private javax.swing.JTextField ipTF2;
    private javax.swing.JTextField ipTF3;
    private javax.swing.JTextField ipTF4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLayeredPane layeredPane;
    private javax.swing.JButton loginBtn;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField messageField;
    private javax.swing.JMenuItem signOutMI;
    // End of variables declaration//GEN-END:variables
}
